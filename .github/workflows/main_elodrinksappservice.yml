# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: API tests using Postman CLI, Build and deploy ASP.Net Core app to Azure Web App - EloDrinksAppService

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  testRunner:
    runs-on: ubuntu-latest
    steps: 
      - uses: actions/checkout@v4
      - name: Install Postamn CLI
        run: |
          curl -o- "https://dl-cli.pstmn.io/install/linux64.sh" | sh
      - name: Install Newman
        run: |
          npm install -g newman newman-reporter-htmlextra
      - name: Login to Postman CLI
        run: postman login --with-api-key ${{ secrets.POSTMAN_API_KEY }}
      - name: Run API tests via cli
        run: |
          postman collection run "34776802-d22f1844-6f64-4533-8912-7d0175065e1e" -e "34776802-205573fd-e2fb-494e-8033-f88da5504d2c" 
      - name: Run API tests with Newman and generate report
        run: |
          newman run "https://api.getpostman.com/collections/34776802-d22f1844-6f64-4533-8912-7d0175065e1e?apikey=${{ secrets.POSTMAN_API_KEY }}" \
            -e "https://api.getpostman.com/environments/34776802-205573fd-e2fb-494e-8033-f88da5504d2c?apikey=${{ secrets.POSTMAN_API_KEY }}" \
            --reporters cli,htmlextra \
            --reporter-htmlextra-export newman-report.html \
            --reporter-htmlextra-darktheme
      - name: Upload API test report artifact
        uses: actions/upload-artifact@v4
        with:
          name: api-test-report
          path: newman-report.html


  build:
    runs-on: windows-latest
    needs: testRunner
    permissions:
      contents: read 

    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'

      - name: Restore NuGet packages with cache
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}-${{ hashFiles('**/EloDrinksAPI.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore dependencies
        run: dotnet restore ./EloDrinksAPI/EloDrinksAPI.csproj

      - name: Build with dotnet
        run: dotnet build ./EloDrinksAPI/EloDrinksAPI.csproj --configuration Release

      - name: dotnet publish
        run: dotnet publish ./EloDrinksAPI/EloDrinksAPI.csproj -c Release -o "${{env.DOTNET_ROOT}}/myapp"

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/myapp

  deploy:
    runs-on: windows-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write 
      contents: read 

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: .net-app
      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_FF9C583A4D8049FFBCD5A7B1B3A69E95 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_D9310790370041A5A942C787B74F5595 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_F0EE0CB36B8C42D3B023C4BDD2F5BA36 }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'EloDrinksAppService'
          slot-name: 'Production'
          package: .
          
