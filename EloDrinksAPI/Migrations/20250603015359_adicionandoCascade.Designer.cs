// <auto-generated />
using System;
using EloDrinksAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EloDrinksAPI.Migrations
{
    [DbContext(typeof(ElodrinkContext))]
    [Migration("20250603015359_adicionandoCascade")]
    partial class adicionandoCascade
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_0900_ai_ci")
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");

            modelBuilder.Entity("EloDrinksAPI.Models.Item", b =>
                {
                    b.Property<string>("IdItem")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("idItem");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("descricao");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("nome");

                    b.Property<float>("Preco")
                        .HasColumnType("float")
                        .HasColumnName("preco");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("tipo");

                    b.HasKey("IdItem")
                        .HasName("PRIMARY");

                    b.ToTable("item", (string)null);
                });

            modelBuilder.Entity("EloDrinksAPI.Models.Orcamento", b =>
                {
                    b.Property<string>("IdOrcamento")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("idOrcamento");

                    b.Property<string>("UsuarioIdUsuario")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("Usuario_idUsuario");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("cep");

                    b.Property<DateOnly>("Data")
                        .HasColumnType("date")
                        .HasColumnName("data");

                    b.Property<string>("DrinksSelecionados")
                        .HasColumnType("text")
                        .HasColumnName("drinksSelecionados");

                    b.Property<string>("Endereco")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("endereco");

                    b.Property<TimeOnly>("HoraFim")
                        .HasColumnType("time")
                        .HasColumnName("horaFim");

                    b.Property<TimeOnly>("HoraInicio")
                        .HasColumnType("time")
                        .HasColumnName("horaInicio");

                    b.Property<float>("Preco")
                        .HasColumnType("float")
                        .HasColumnName("preco");

                    b.Property<int>("QtdPessoas")
                        .HasColumnType("int")
                        .HasColumnName("qtdPessoas");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("status");

                    b.Property<string>("TipoEvento")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("tipoEvento");

                    b.HasKey("IdOrcamento", "UsuarioIdUsuario")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.HasIndex(new[] { "UsuarioIdUsuario" }, "fk_Orcamento_Usuario1");

                    b.ToTable("orcamento", (string)null);
                });

            modelBuilder.Entity("EloDrinksAPI.Models.OrcamentoHasItem", b =>
                {
                    b.Property<string>("OrcamentoIdOrcamento")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("Orcamento_idOrcamento");

                    b.Property<string>("OrcamentoUsuarioIdUsuario")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("Orcamento_Usuario_idUsuario");

                    b.Property<string>("ItemIdItem")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("Item_idItem");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.HasKey("OrcamentoIdOrcamento", "OrcamentoUsuarioIdUsuario", "ItemIdItem")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0, 0 });

                    b.HasIndex(new[] { "ItemIdItem" }, "fk_Orcamento_has_Item_Item1_idx");

                    b.HasIndex(new[] { "OrcamentoIdOrcamento", "OrcamentoUsuarioIdUsuario" }, "fk_Orcamento_has_Item_Orcamento1_idx");

                    b.ToTable("orcamento_has_item", (string)null);
                });

            modelBuilder.Entity("EloDrinksAPI.Models.PasswordResetToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Expiration")
                        .HasColumnType("datetime");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "UserId" }, "UserId");

                    b.ToTable("passwordresettokens", (string)null);
                });

            modelBuilder.Entity("EloDrinksAPI.Models.Pedido", b =>
                {
                    b.Property<string>("IdPedido")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("idPedido");

                    b.Property<string>("OrcamentoIdOrcamento")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("Orcamento_idOrcamento");

                    b.Property<string>("OrcamentoUsuarioIdUsuario")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("Orcamento_Usuario_idUsuario");

                    b.Property<DateOnly>("DataCriacao")
                        .HasColumnType("date")
                        .HasColumnName("dataCriacao");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("status");

                    b.Property<float>("Total")
                        .HasColumnType("float")
                        .HasColumnName("total");

                    b.HasKey("IdPedido", "OrcamentoIdOrcamento", "OrcamentoUsuarioIdUsuario")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0, 0 });

                    b.HasIndex(new[] { "OrcamentoIdOrcamento", "OrcamentoUsuarioIdUsuario" }, "fk_Pedido_Orcamento1_idx");

                    b.ToTable("pedido", (string)null);
                });

            modelBuilder.Entity("EloDrinksAPI.Models.Usuario", b =>
                {
                    b.Property<string>("IdUsuario")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("idUsuario");

                    b.Property<DateOnly>("DataCadastro")
                        .HasColumnType("date")
                        .HasColumnName("dataCadastro");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("email");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("nome");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(262)
                        .HasColumnType("varchar(262)")
                        .HasColumnName("senha");

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("sobrenome");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("telefone");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("tipo");

                    b.HasKey("IdUsuario")
                        .HasName("PRIMARY");

                    b.ToTable("usuario", (string)null);
                });

            modelBuilder.Entity("EloDrinksAPI.Models.Orcamento", b =>
                {
                    b.HasOne("EloDrinksAPI.Models.Usuario", "UsuarioIdUsuarioNavigation")
                        .WithMany("Orcamentos")
                        .HasForeignKey("UsuarioIdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_Orcamento_Usuario1");

                    b.Navigation("UsuarioIdUsuarioNavigation");
                });

            modelBuilder.Entity("EloDrinksAPI.Models.OrcamentoHasItem", b =>
                {
                    b.HasOne("EloDrinksAPI.Models.Item", "ItemIdItemNavigation")
                        .WithMany("OrcamentoHasItems")
                        .HasForeignKey("ItemIdItem")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_Orcamento_has_Item_Item1");

                    b.HasOne("EloDrinksAPI.Models.Orcamento", "Orcamento")
                        .WithMany("OrcamentoHasItems")
                        .HasForeignKey("OrcamentoIdOrcamento", "OrcamentoUsuarioIdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_Orcamento_has_Item_Orcamento1");

                    b.Navigation("ItemIdItemNavigation");

                    b.Navigation("Orcamento");
                });

            modelBuilder.Entity("EloDrinksAPI.Models.PasswordResetToken", b =>
                {
                    b.HasOne("EloDrinksAPI.Models.Usuario", "User")
                        .WithMany("Passwordresettokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("passwordresettokens_ibfk_1");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EloDrinksAPI.Models.Pedido", b =>
                {
                    b.HasOne("EloDrinksAPI.Models.Orcamento", "Orcamento")
                        .WithMany("Pedidos")
                        .HasForeignKey("OrcamentoIdOrcamento", "OrcamentoUsuarioIdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_Pedido_Orcamento1");

                    b.Navigation("Orcamento");
                });

            modelBuilder.Entity("EloDrinksAPI.Models.Item", b =>
                {
                    b.Navigation("OrcamentoHasItems");
                });

            modelBuilder.Entity("EloDrinksAPI.Models.Orcamento", b =>
                {
                    b.Navigation("OrcamentoHasItems");

                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("EloDrinksAPI.Models.Usuario", b =>
                {
                    b.Navigation("Orcamentos");

                    b.Navigation("Passwordresettokens");
                });
#pragma warning restore 612, 618
        }
    }
}
